security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username

    firewalls:
        # Firewall pour le login JSON
        login:
            pattern: ^/api/login
            stateless: true
            provider: app_user_provider
            json_login:
                check_path: /api/login
                username_path: username
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        # Firewall pour toutes les routes API protégées par JWT
        api:
            pattern: ^/api
            stateless: true
            provider: app_user_provider
            jwt: ~

        # Firewall principal pour le site (non-API)
        main:
            lazy: true
            provider: app_user_provider
            logout: true

    # Contrôle d'accès
    access_control:
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
        # - { path: ^/admin, roles: [ROLE_ADMIN, ROLE_NOYAU] }
        # - { path: ^/profile, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4       # bcrypt
                time_cost: 3  # argon2
                memory_cost: 10 # argon2
